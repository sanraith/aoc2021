{"version":3,"sources":["calendar/calendarHelpers.ts","calendar/CalendarCell.tsx","calendar/CalendarPopup.tsx","calendar/Calendar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["calendarCellId","dayNumber","px","x","getPopupStyle","day","prevDay","state","popupGrid","visibility","cellId","cellRect","document","getElementById","getBoundingClientRect","left","top","y","width","height","console","log","popupGridMargin","parseInt","getComputedStyle","getPropertyValue","match","popupGridRect","vw","Math","max","documentElement","clientWidth","window","innerWidth","vh","clientHeight","innerHeight","CalendarCell","isCopy","onCellClick","isActiveDay","id","undefined","className","onClick","CalendarPopup","onClosed","prevDayRef","useRef","popupRef","popupGridRef","style","current","useEffect","classList","remove","add","Object","assign","addEventListener","onDocumentClick","removeEventListener","e","calendar","isOutsideClick","contains","target","isEmptyInsideClick","getSelection","toString","ref","Array","fill","map","_","partIndex","Fragment","alert","open","padStart","openSourceCodeInNewTab","openPuzzleDescriptionInNewTab","Calendar","rows","i","j","useState","openedDay","setOpenedDay","history","useHistory","newDay","push","row","clocks","App","clock","setClock","startTime","performance","now","intervalId","setInterval","elapsedTime","icon","floor","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RouteParser","params","useParams","page","navigator","maxTouchPoints","msMaxTouchPoints","body","ReactDOM","render","StrictMode","basename","process","path"],"mappings":"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","file":"static/js/main.448a75bd.chunk.js","sourcesContent":["export function calendarCellId(dayNumber: number): string {\r\n    return `cd${dayNumber}`;\r\n}\r\n\r\nexport function getViewportSize(): { vw: number, vh: number; } {\r\n    const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);\r\n\r\n    return { vw, vh };\r\n}\r\n\r\nexport function px(x: number): string {\r\n    return x + 'px';\r\n}\r\n\r\nexport function getPopupStyle(\r\n    day: number | null, prevDay: number | null, state: 'start' | 'end',\r\n    popupGrid: HTMLDivElement | null\r\n): React.CSSProperties {\r\n    // Skip invalid case.\r\n    if (!day && !prevDay) { return { visibility: 'hidden' }; }\r\n\r\n    // If we switch between cells, pretend that we closed the previous one.\r\n    if (day && prevDay) { prevDay = null; }\r\n\r\n    const cellId = day ? calendarCellId(day) : calendarCellId(prevDay as number);\r\n    const cell = document.getElementById(cellId) as HTMLDivElement;\r\n    const cellRect = cell.getBoundingClientRect();\r\n    const isOpenDirection = state === 'start' && day || state === 'end' && prevDay;\r\n    if (isOpenDirection) {\r\n        return {\r\n            visibility: 'hidden',\r\n            left: px(cellRect.x),\r\n            top: px(cellRect.y),\r\n            width: px(cellRect.width),\r\n            height: px(cellRect.height)\r\n        };\r\n    } else {\r\n        if (!popupGrid) {\r\n            console.log('This should not have happened...');\r\n            return {};\r\n        }\r\n\r\n        const popupGridMargin = parseInt(getComputedStyle(popupGrid).getPropertyValue('--margin')?.match(/\\d+/g)![0]);\r\n        const popupGridRect = popupGrid.getBoundingClientRect();\r\n        const { vw/*, vh*/ } = getViewportSize();\r\n        const width = popupGridRect.width + 2 * popupGridMargin;\r\n        const height = popupGridRect.height + 2 * popupGridMargin;\r\n        const left = (vw - width) / 2;\r\n        const top = 100;//(vh - height) / 2;\r\n\r\n        return {\r\n            visibility: 'visible',\r\n            width: px(width),\r\n            height: px(height),\r\n            left: px(left),\r\n            top: px(top)\r\n        };\r\n    }\r\n}\r\n\r\nexport function openPuzzleDescriptionInNewTab(day: number | null): void {\r\n    if (!day) { return; }\r\n    window.open(`https://adventofcode.com/2020/day/${day}`);\r\n}\r\n\r\nexport function openSourceCodeInNewTab(day: number | null): void {\r\n    if (!day) { return; }\r\n    window.open(`https://github.com/sanraith/aoc2021/blob/dev/src/solutions/day${day?.toString().padStart(2, '0')}.ts`);\r\n}","import { calendarCellId } from './calendarHelpers';\r\n\r\nexport interface CalendarCellProps {\r\n    day?: number | null;\r\n    isCopy?: boolean;\r\n    onCellClick?: (day: number) => void;\r\n}\r\n\r\nexport default function CalendarCell({ day, isCopy, onCellClick }: CalendarCellProps): JSX.Element {\r\n    const isDecemberDay = day && day >= 1 && day <= 31;\r\n    if (isDecemberDay) {\r\n        const cellId = calendarCellId(day);\r\n        const isActiveDay = day <= 25;\r\n        return (\r\n            <div id={isCopy ? undefined : cellId}\r\n                className={'calendar-cell' + (isActiveDay && !isCopy ? ' pointer' : '')}\r\n                onClick={() => isActiveDay && onCellClick && onCellClick(day)}>\r\n                <span>{day}</span>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div className=\"calendar-cell gray\"><span></span></div>);\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport CalendarCell from './CalendarCell';\r\nimport { getPopupStyle, openPuzzleDescriptionInNewTab, openSourceCodeInNewTab } from './calendarHelpers';\r\n\r\ninterface PopupProps {\r\n    day: number | null;\r\n    onClosed: () => void;\r\n}\r\n\r\nexport default function CalendarPopup({ day, onClosed }: PopupProps): JSX.Element {\r\n    const prevDayRef = useRef<number | null>(null);\r\n    const popupRef = useRef<HTMLDivElement>(null);\r\n    const popupGridRef = useRef<HTMLDivElement>(null);\r\n    const style = getPopupStyle(day, prevDayRef.current, 'start', popupGridRef.current);\r\n\r\n    // After the initial render, turn on transitions and enlarge popup.\r\n    useEffect(() => {\r\n        if (!popupRef.current) { return; }\r\n        popupRef.current.classList.remove('notransition');\r\n        if (day) {\r\n            popupRef.current.classList.add('open');\r\n        } else {\r\n            popupRef.current.classList.remove('open');\r\n        }\r\n        Object.assign(popupRef.current.style, getPopupStyle(day, prevDayRef.current, 'end', popupGridRef.current));\r\n        prevDayRef.current = day;\r\n    }, [day]);\r\n\r\n    // Close popup when user clicks outside or an empty inside area\r\n    useEffect(() => {\r\n        if (!day) { return; }\r\n\r\n        function onDocumentClick(e: MouseEvent) {\r\n            const calendar = document.getElementById('calendar')!;\r\n            const isOutsideClick = popupRef.current && !popupRef.current.contains(e.target as Node) && !calendar.contains(e.target as Node);\r\n            const isEmptyInsideClick = e.target === popupRef.current || e.target === popupGridRef.current;\r\n            const isSelectionEvent = !!window.getSelection()?.toString();\r\n            if (!isSelectionEvent && (isOutsideClick || isEmptyInsideClick)) {\r\n                onClosed();\r\n            }\r\n        }\r\n        document.addEventListener('click', onDocumentClick);\r\n        return () => document.removeEventListener('click', onDocumentClick);\r\n    }, [day, onClosed]);\r\n\r\n    return (<div key={day} ref={popupRef} className={'popup notransition' + (day ? '' : ' open')} style={style}>\r\n        <div ref={popupGridRef} className='popup-grid'>\r\n            <div className='popup-number'>\r\n                <CalendarCell day={day ?? prevDayRef.current} isCopy={true} />\r\n            </div>\r\n            <div className='popup-title fade'>\r\n                The Tyranny of the Rocket Equation\r\n            </div>\r\n            <div className='spacer'></div>\r\n\r\n            {Array(2).fill(0).map((_, partIndex) => (<React.Fragment key={partIndex}>\r\n                <div className='popup-part-label fade'>\r\n                    Part {partIndex + 1}:\r\n                </div>\r\n                <div className='popup-part-result fade'>\r\n                    849272349\r\n                </div>\r\n                <div className='popup-part-performance fade'>\r\n                    123 ms 🕑\r\n                </div>\r\n            </React.Fragment>))}\r\n\r\n            <div style={{ height: '10px' }}></div>\r\n            <div className='popup-part-footer fade'>\r\n                <div className='collapsible'>\r\n                    <button className='secondary' onClick={() => alert('Not implemented yet.')}>\r\n                        <span>💽</span> Input\r\n                    </button>\r\n                    {/* TODO Change link from dev to main */}\r\n                    <button className='secondary' onClick={() => openSourceCodeInNewTab(day)}>\r\n                        <span>💻</span> Source\r\n                    </button>\r\n                    {/* TODO Change link from 2020 to 2021 */}\r\n                    <button className='secondary' onClick={() => openPuzzleDescriptionInNewTab(day)}>\r\n                        <span>📜</span> Puzzle\r\n                    </button>\r\n                </div>\r\n                <button className='primary' onClick={() => alert('Not implemented yet.')}>\r\n                    Solve 📈\r\n                </button >\r\n            </div>\r\n            <div style={{ height: '10px' }}></div>\r\n        </div>\r\n    </div>);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './Calendar.css';\r\nimport CalendarCell from './CalendarCell';\r\nimport Popup from './CalendarPopup';\r\n\r\nexport default function Calendar(): JSX.Element {\r\n    const rows = Array(5).fill(0).map((_, i) => Array(7).fill(0).map((_, j) => i * 7 + j - 1));\r\n    const [openedDay, setOpenedDay] = useState<number | null>(null);\r\n    const history = useHistory();\r\n    const onCellClick = (day: number | null) => {\r\n        const newDay = openedDay === day ? null : day;\r\n        history.push(newDay ? `/day/${newDay.toString().padStart(2, '0')}` : '/');\r\n        setOpenedDay(newDay);\r\n    };\r\n\r\n    return (<React.Fragment>\r\n        <Popup day={openedDay} onClosed={() => onCellClick(null)} />\r\n        <div id=\"calendar\" className=\"calendar\">\r\n            {rows.map(row => row.map(day => (\r\n                <CalendarCell key={day} day={day} onCellClick={day => onCellClick(day)} />\r\n            )))}\r\n        </div>\r\n    </React.Fragment >);\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { clearInterval, setInterval } from 'timers';\r\nimport './App.css';\r\nimport Calendar from './calendar/Calendar';\r\n\r\nconst clocks = ['🕐', '🕑', '🕒', '🕓', '🕔', '🕕', '🕖', '🕗', '🕘', '🕙', '🕚', '🕛', '🕧', '🕜', '🕝', '🕞', '🕟', '🕠', '🕡', '🕢', '🕣', '🕤', '🕥', '🕦'];\r\n\r\nfunction App(): JSX.Element {\r\n    const [clock, setClock] = useState('');\r\n    useEffect(() => {\r\n        const startTime = performance.now();\r\n        const intervalId = setInterval(() => {\r\n            const currentTime = performance.now();\r\n            const elapsedTime = currentTime - startTime;\r\n            const icon = clocks[Math.floor((elapsedTime % 1000) / 1000 * 12)];\r\n            setClock(`${Math.floor(elapsedTime)} ms ${icon}`);\r\n\r\n            if (elapsedTime > 500) {\r\n                console.log('lol', intervalId);\r\n                clearInterval(intervalId);\r\n            }\r\n        }, 100);\r\n\r\n        return () => clearInterval(intervalId);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Calendar />\r\n            <span>{clock}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, useParams } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nfunction RouteParser(): null {\r\n    const params = useParams() as { page: string; };\r\n    if (!('page' in params)) { return null; }\r\n    console.log(`navigation page param: ${params.page}`);\r\n    return null;\r\n}\r\n\r\nconst isTouchDevice = ('ontouchstart' in window) || (navigator.maxTouchPoints > 0) ||\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ('msMaxTouchPoints' in navigator && (navigator as any).msMaxTouchPoints > 0);\r\n\r\nif (!isTouchDevice) {\r\n    document.body.classList.add('no-touch');\r\n}\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Route path=\"/day/:page\" >\r\n                <RouteParser />\r\n            </Route>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode >,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}